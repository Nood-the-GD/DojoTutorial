// Generated by dojo-bindgen on Thu, 13 Jun 2024 13:28:34 +0000. Do not modify this file manually.
using System;
using System.Reflection;
using Dojo;
using Dojo.Starknet;
using UnityEngine;
using System.Linq;

namespace Game
{
    // Type definition for `dojo_starter::models::player::Character` enum
    public abstract record Character() {
        public record Horseman() : Character;
        public record Magician() : Character;

        public static readonly Type[] Characters = typeof(Character).GetNestedTypes(BindingFlags.Public)
            .OrderBy(t => t.MetadataToken)
            .ToArray();
        
        // Find the index of character type we input
        public static int GetIndex(Character character)
        {
            return Array.IndexOf(Characters, character.GetType());
        }
    }


    // Model definition for `dojo_starter::models::player::Player` model
    public class Player : ModelInstance {
        [ModelField("player")]
        public FieldElement player;

        [ModelField("character")]
        public Character character;

        [ModelField("score")]
        public ulong score;

        // Start is called before the first frame update
        void Start() {
        }

        // Update is called once per frame
        void Update() {
        }
    }
}